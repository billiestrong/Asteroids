[gd_scene load_steps=7 format=3 uid="uid://c370kpw6jiamd"]

[ext_resource type="PackedScene" uid="uid://dc5fn48r1ocpu" path="res://Scenes/bullet.tscn" id="2_gfmda"]
[ext_resource type="PackedScene" uid="uid://cejkgj3dg6tvx" path="res://explosion.tscn" id="3_vuwyu"]
[ext_resource type="AudioStream" uid="uid://cko75r4j07fax" path="res://Assets/audio/ufo_shot.ogg" id="5_oqilu"]

[sub_resource type="GDScript" id="GDScript_pkhe6"]
script/source = "class_name Ufo

extends Area2D

signal ufo_destroyed

@onready var explosion_particles = $ExplosionParticles
@onready var shooting_timer = $ShootingTimer
@onready var audio_player: AudioStreamPlayer = $AudioStreamPlayer

@export var bullet_scene: PackedScene
@export var path: PathFollow2D = null
var current_point = 0
var speed = 300
var look_ahead = 5
var visibility_counts = 0
var can_shoot = false

# Called when the node enters the scene tree for the first time.
func _ready():
#	path.progress = .5
	shooting_timer.timeout.connect(shoot)

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	if path == null:
		return
	var progress = delta * speed;
	path.progress += progress

func shoot():
	if !can_shoot:
		return
	audio_player.play()
	var bullet = bullet_scene.instantiate() as Bullet
	bullet.set_collision_layer_value(2, 0)
	bullet.set_collision_layer_value(5, 1)
	
	get_node(\"../../../SubViewportContainer/SubViewport\") .add_child(bullet)
	bullet.position = Vector2(global_position)
	bullet.direction = get_random_shot_direction()


func _on_area_entered(area):
	if area is Bullet:
		ufo_destroyed.emit()
		queue_free()
		area.queue_free()
		explosion_particles.emitting = true
		explosion_particles.reparent(get_node(\"../../../SubViewportContainer/SubViewport\"))
		

func get_random_shot_direction():
	var node_y = self.get_global_transform().origin.y
	var screen_height = get_viewport().get_visible_rect().size.y 
	# is node in upper half of the screen
	var should_shot_down = node_y <= screen_height / 2
	
	if should_shot_down:
		var angle = deg_to_rad(randf_range(45, 135))
		return Vector2(cos(angle), sin(angle))
	else:
		var angle = deg_to_rad(randf_range(225, 315))
		return Vector2(cos(angle), sin(angle))

func _on_visible_on_screen_notifier_2d_screen_entered():

	visibility_counts += 1
	if visibility_counts == 1:
		can_shoot = true
	else:
		can_shoot = false
		
	if(visibility_counts == 2):
		queue_free()
"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_8363y"]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_gdli3"]
radius = 8.34
height = 60.67

[node name="Ufo" type="Area2D"]
collision_layer = 8
collision_mask = 7
script = SubResource("GDScript_pkhe6")
bullet_scene = ExtResource("2_gfmda")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = SubResource("CompressedTexture2D_8363y")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, 3)
rotation = 1.5708
shape = SubResource("CapsuleShape2D_gdli3")

[node name="ExplosionParticles" parent="." instance=ExtResource("3_vuwyu")]
position = Vector2(0, 0)

[node name="ShootingTimer" type="Timer" parent="."]
autostart = true

[node name="VisibleOnScreenNotifier2D" type="VisibleOnScreenNotifier2D" parent="."]

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource("5_oqilu")

[connection signal="area_entered" from="." to="." method="_on_area_entered"]
[connection signal="screen_entered" from="VisibleOnScreenNotifier2D" to="." method="_on_visible_on_screen_notifier_2d_screen_entered"]
